@import '@scania/typography/dist/scss/mixins';
@import '@scania/typography/dist/scss/tokens';
@import './button-core';

$btn-default-height: 14rem;
$btn-md-height: 12rem;
$btn-sm-height: 10rem;
$types: (primary, secondary, ghost, danger);
$props: (background, border-color, color);

@mixin button-base {
  @include type-style('detail-02');

  display: inline-block;
  border-radius: 1rem;
  border: none;
  box-shadow: none;
  position: relative;
  text-decoration: none;
  cursor: pointer;
}

.sdds-btn {
  @include button-base;

  height: $btn-default-height;
  padding: var(--sdds-spacing-element-20);
  border: 1px solid;

  &:disabled,
  &.disabled {
    cursor: unset;
  }

  &:focus {
    outline: none;
  }

  .sdds-btn-icon,
  &.sdds-btn-icon {
    fill: var(--sdds-grey-50);
    color: var(--sdds-grey-50);
    font-size: 4rem; //16px
  }

  .sdds-btn-icon {
    margin-left: var(--sdds-spacing-element-32);
    width: 16px;
    height: 16px;
    line-height: 0;
  }

  &.sdds-btn-sm {
    padding: var(--sdds-spacing-element-12);
    height: $btn-sm-height;

    .sdds-btn-icon {
      margin-left: var(--sdds-spacing-element-24);
    }
  }

  &.sdds-btn-md {
    padding: var(--sdds-spacing-element-16);
    height: $btn-md-height;

    .sdds-btn-icon {
      margin-left: var(--sdds-spacing-element-24);
    }
  }

  &.sdds-btn-fullbleed {
    width: inherit;
    text-align: center;

    .sdds-btn-icon,
    &.sdds-btn-icon {
      margin-left: var(--sdds-spacing-element-8);
    }
  }

  @each $type in $types {
    &.sdds-btn-#{$type} {
      @each $prop in $props {
        #{$prop}: var(--sdds-btn-#{$type}-#{$prop});
      }

      &:hover {
        @each $prop in $props {
          #{$prop}: var(--sdds-btn-#{$type}-#{$prop}-hover);
        }
      }

      &:focus {
        @each $prop in $props {
          #{$prop}: var(--sdds-btn-#{$type}-#{$prop}-focus);
        }
      }

      &:active,
      &.active {
        @each $prop in $props {
          #{$prop}: var(--sdds-btn-#{$type}-#{$prop}-active);
        }
      }

      &.disabled,
      &:disabled {
        @each $prop in $props {
          cursor: not-allowed;
          #{$prop}: var(--sdds-btn-#{$type}-#{$prop}-disabled);

          .sdds-btn-icon,
          &.sdds-btn-icon {
            color: var(--sdds-grey-300);
          }
        }
      }
    }
  }
}

::slotted([slot='icon']) {
  margin-left: var(--sdds-spacing-element-32);
  width: var(--sdds-spacing-element-16);
  height: var(--sdds-spacing-element-16);
}

:host(sdds-button) {
  display: inline-block;
}
