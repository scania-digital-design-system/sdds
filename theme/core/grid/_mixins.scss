@import '../prefix';
@import 'breakpoints';

// Containers
@mixin grid-container($prefix) {

  .#{$prefix}-container,
  .#{$prefix}-container-fluid {
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    // padding: 0 $spacing-layout-16;
  }
}

// Grid breakpoints
@mixin grid-container-breakpoints($prefix, $breakpoints) {

  @each $key, $values in $breakpoints {
    $container-margin: map-get($values, 'margin');
    $container-width: map-get($values, 'container');
    $breakpoint: map-get($values, 'breakpoint');

      @media (min-width: $breakpoint) {
        .#{$prefix}-container, .#{$prefix}-container-fluid {
            padding-right: $container-margin;
            padding-left: $container-margin;
        }
        .#{$prefix}-container {
          max-width: $container-width;
        }
      }
      @include display-hidden($prefix, $breakpoint, $key)
    // @include grid-container-full-width-breakpoints($prefix,$breakpoint,$container-margin);
  }

}

/* 
  Rows
*/
@mixin grid-row($prefix) {
  .#{$prefix}-row {
    display:flex;
    flex-wrap: wrap;
  }
}

/*
  Display hidden and show
*/
@mixin display-hidden($prefix, $breakpoint, $key) {
  @media(min-width: $breakpoint) {
    .sdds-hide-#{$key} {
      display: none !important;
    }
    .sdds-show-#{$key} {
      display: block !important;
    }
  }
}

/*
  Columns
*/

@mixin grid-make-col($grid) {

  @each $size, $values in $grid {
    $breakpoint: map-get($values, 'breakpoint');
    $columns: map-get($values, 'columns');
    $padding: map-get($values, 'padding');

    @media (min-width: $breakpoint) {
      @for $i from 1 through $columns {
        .#{$prefix}-col-#{$size}-#{$i} {
          @include grid-col-size($columns, $i, $padding);
        }
      }
    }
    // Create columns that doesn't need a number, it bases it spacing on the area available
    @include grid-col-auto($prefix, $size, $breakpoint, $padding);
  }
}

// Column size calculation
@mixin grid-col-size($columns, $i, $padding) {
  display: block;
  flex-grow: 0;
  flex-shrink: 0;
  // Index divided by amount of the columns
  flex-basis: percentage(($i / $columns));
  max-width: percentage(($i / $columns));

  @include grid-col-padding($padding);
}

//Column auto size
@mixin grid-col-auto($prefix, $size, $breakpoint, $padding) {
  @media (min-width: $breakpoint) {
    .sdds-col, .#{$prefix}-col-#{$size} {
      flex-grow: 1;
      flex-basis: 0;
      max-width: 100%;
      min-width: 8.3333%;
      @include grid-col-padding($padding);
    }
  }
}

// Column padding
@mixin grid-col-padding($padding) {
  padding-left: $padding;
  padding-right: $padding;

  &.#{$prefix}-no-padding {
    padding: 0;
  }
}

/*
  Offset
*/

// Column offset for every breakpoint
@mixin grid-offset-col($breakpoints) {

  @each $sizes, $values in $breakpoints {
    $columns: map-get($values, 'columns');
    $padding: map-get($values, 'padding');
    $breakpoint: map-get($values, 'breakpoint');

   //  Each column for everysize
    @media (min-width:  $breakpoint ) {
      @for $i from 1 through $columns {
        .#{$prefix}-col-#{$sizes}-#{$i}-offset {
          margin-left: percentage(($i / $columns));
        }
      }
    }
  }
}

/* 
  Push grid
*/

@mixin grid-push($breakpoints) {
  @include grid-push-container($breakpoints);
  .#{$prefix}-push {
    display: flex;

    @include grid-make-col($breakpoints);

    .#{$prefix}-container {
      margin: 0;
    }
  }

  .#{$prefix}-content-push {
    flex-grow: 1;
  }
}

// @mixin grid-push-container($breakpoints) {
//   @each $key, $values in $breakpoints {

//     $breakpoint-margin: map-get($values, 'margin');
//     $breakpoint-width: map-get($values, 'width');
//     $breakpoint-content-width: map-get($values, 'content');
//     $breakpoint-sidebar: map-get($values, 'sidebar');
//     $breakpoint-display: map-get($values, 'display');

//     @media (min-width:  $breakpoint-width ) {
//       .#{$prefix}-sidebar {
//         flex-basis: $breakpoint-sidebar;
//         min-width: $breakpoint-sidebar;
//         display: $breakpoint-display;

//         &.#{$prefix}-sidebar-collapse {
//           flex-basis: 17rem;
//           min-width: 17rem;
//         }
//       }

//       .#{$prefix}-container-push {
//         padding-right: $breakpoint-margin;
//         padding-left: $breakpoint-margin;
//         max-width: $breakpoint-content-width;
//       }

//       .#{$prefix}-container-push-fluid {
//         padding-right: $breakpoint-margin;
//         padding-left: $breakpoint-margin;
//       }
//     }
//   }
// }