@import './vars';
@import '../base-unit';

//Function to convert px value into rem
@function rem-size($target, $context: $base-unit) {
  @return ($target / $context) * 1rem;
}

@mixin properties($map) {
  @each $name, $value in $map {
    #{$name}: $value;
  }
}

// Function to get size from the type scale (we have 14 different scale)
@function type-scale($step){
  $val : 10;
  @if $step <= 4 {
    $val : ($step - 1) * 2 + 10;
  }
  @if $step > 4 and $step <= 8 {
    $val : $step  * 4;
  }
  @if $step > 8 {
    $val : ($step + ($step - 8))  * 4;
  }
  // Return value in rem
  @return $val / 4 * 1rem;
}

// Typography tokens
// FUNCTIONAL TYPE
$headline-01: (
  font-family: $font-family-headline-bold,
  font-weight: bold,
  font-size: type-scale(9),
  line-height: type-scale(9),
  letter-spacing: 0em, 
);
$headline-02: (
  font-family: $font-family-bold,
  font-weight: bold,
  font-size: type-scale(8),
  line-height: type-scale(8),
  letter-spacing: -0.04em, 
);
$headline-03: (
  font-family: $font-family-bold,
  font-weight: bold,
  font-size: type-scale(6),
  line-height: type-scale(6),
  letter-spacing: -0.03em, 
);
$headline-04: (
  font-family: $font-family-bold,
  font-weight: bold,
  font-size: type-scale(5),
  line-height: type-scale(6),
  letter-spacing: -0.04em, 
);
$headline-05: (
  font-family: $font-family-bold,
  font-weight: bold,
  font-size: type-scale(4),
  line-height: type-scale(6),
  letter-spacing: -0.02em, 
);
$headline-06: (
  font-family: $font-family-bold,
  font-weight: bold,
  font-size: type-scale(3),
  line-height: type-scale(4),
  letter-spacing: -0.02em, 
);
$headline-07: (
  font-family: $font-family-semi-condensed-bold,
  font-weight: bold,
  font-size: type-scale(3),
  line-height: type-scale(4),
  letter-spacing: -0.01em, 
);

$paragraph-01: (
  font-family: $font-family-regular,
  font-size: type-scale(6),
  line-height: type-scale(8),
  letter-spacing: -0.03em
);
$paragraph-02: (
  font-family: $font-family-regular,
  font-size: type-scale(5),
  line-height: type-scale(6),
  letter-spacing: -0.01em
);
$body-01: (
  font-family: $font-family-regular,
  font-size: type-scale(4),
  line-height: type-scale(6),
  letter-spacing: -0.02em
);
$body-02: (
  font-family: $font-family-regular,
  font-size: type-scale(3),
  line-height: type-scale(5),
  letter-spacing: -0.01em
);
$detail-01: (
  font-family: $font-family-semi-condensed,
  font-size: type-scale(4),
  line-height: type-scale(6),
  letter-spacing: -0.01em
);
$detail-02: (
  font-family: $font-family-semi-condensed,
  font-size: type-scale(3),
  line-height: type-scale(4),
  letter-spacing: -0.01em
);
$detail-03: (
  font-family: $font-family-semi-condensed,
  font-size: type-scale(3),
  line-height: type-scale(5),
  letter-spacing: -0.01em
);
$detail-04: (
  font-family: $font-family-bold,
  font-weight: bold,
  text-transform: uppercase,
  font-size: type-scale(3),
  line-height: type-scale(4),
  letter-spacing: 0.08em
);
$detail-05: (
  font-family: $font-family-semi-condensed,
  font-size: type-scale(3),
  line-height: type-scale(4),
  letter-spacing: 0em
);
$detail-06: (
  font-family: $font-family-bold,
  font-weight: bold,
  text-transform: uppercase,
  font-size: type-scale(1),
  line-height: type-scale(4),
  letter-spacing: 0.08em
);

// Expressive
$expressive-headline-01:(
  font-family: $font-family-headline-bold,
  font-weight: bold,
  font-size: type-scale(14),
  line-height: type-scale(14),
  letter-spacing: 0em
);
$expressive-headline-02:(
  font-family: $font-family-headline-bold,
  font-weight: bold,
  font-size: type-scale(11),
  line-height: type-scale(11),
  letter-spacing: 0em
);

$typography-sets: (
  headline-01: $headline-01,
  headline-02: $headline-02,
  headline-03: $headline-03,
  headline-04: $headline-04,
  headline-05: $headline-05,
  headline-06: $headline-06,
  headline-07: $headline-07,
  paragraph-01: $paragraph-01,
  paragraph-02: $paragraph-02,
  body-01: $body-01,
  body-02: $body-02,
  detail-01: $detail-01,
  detail-02: $detail-02,
  detail-03: $detail-03,
  detail-04: $detail-04,
  detail-05: $detail-05,
  detail-06: $detail-06,
  expressive-headline-01: $expressive-headline-01,
  expressive-headline-02: $expressive-headline-02
);

@mixin type-style($name){
  $token : map-get($typography-sets, $name);
  @include properties($token);
}

// Generate class for tokens (.sdds-headline-01)
@each $key, $value in $typography-sets {
  .sdds-#{$key} {
    @include type-style($key);
  }
}

// Generate all headings
@each $key, $value in $typography-sets {
  $i : index(($typography-sets),($key $value) );
  @if $i < 8 {
    h#{$i} {
      @include type-style($key);
    }
  }  
}
